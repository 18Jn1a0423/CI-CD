pipeline {
    agent any
    tools {
        maven 'Maven 3.9.2'
    }
    stages {
        stage('Git Clone') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], userRemoteConfigs: [[url: 'https://github.com/18Jn1a0423/CI-CD.git']]])
            }
        }
        stage('List Files') {
            steps {
                bat 'dir'
            }
        }
        stage('Build Maven') {
            steps {
                dir('CICD-github-actions') {
                    bat 'dir' // List files in the directory to confirm pom.xml presence
                    bat 'mvn clean install'
                }
            }
        }
        stage('Image Build') {
            steps {
                script {
                    def imageExists = bat(script: 'docker images -q springboot', returnStdout: true).trim()
                    if (imageExists != '') {
                        bat 'docker stop springboot || echo "Container not running"'
                        bat 'docker rm -f springboot || echo "Container does not exist"'
                        bat 'docker rmi -f springboot || echo "Image does not exist"'
                    }
                    bat 'docker build -t springboot .'
                }
            }
        }
        stage('Run the Container') {
            steps {
                script {
                    def containerExists = bat(script: 'docker ps -a -q -f name=springboot', returnStatus: true)
                    if (containerExists == 0) {
                        bat 'docker rm -f springboot || echo "Container does not exist"'
                    }
                    bat 'docker run -d -p 8586:8080 --name springboot springboot'
                }
            }
        }
    }
}